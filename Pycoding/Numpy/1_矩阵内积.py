#矩阵内积 = arr.T x arr
In [53]: arr = np.random.randn(6,3)
In [54]: arr
Out[54]:
array([[-0.62173201,  0.5572945 ,  1.13033861],
       [ 0.48818922,  1.47633927, -0.18597994],
       [-0.80163794, -0.83890036, -2.28723359],
       [-0.84035966,  0.81238743,  0.14751185],
       [-0.16725062,  1.16398194, -0.54127947],
       [-1.11414303, -0.02640785,  0.50296168]])
In [55]: arr.T # 矩阵转置，也可以用 transpose,
Out[55]:
array([[-0.62173201,  0.48818922, -0.80163794, -0.84035966, -0.16725062,
        -1.11414303],
       [ 0.5572945 ,  1.47633927, -0.83890036,  0.81238743,  1.16398194,
        -0.02640785],
       [ 1.13033861, -0.18597994, -2.28723359,  0.14751185, -0.54127947,
         0.50296168]])
In [56]: np.dot(arr.T,arr) # 内积计算
Out[56]:
array([[3.24299461, 0.19878723, 0.4461672 ],
       [0.19878723, 5.20943327, 1.75063819],
       [0.4461672 , 1.75063819, 7.11140507]])

#高维矩阵的转置
In [57]: arr = np.arange(16).reshape(2,2,4)
In [58]: arr
Out[58]:
array([[[ 0,  1,  2,  3],
        [ 4,  5,  6,  7]],

       [[ 8,  9, 10, 11],
        [12, 13, 14, 15]]])

In [59]: arr.transpose((1,0,2)) #需要传入一个由轴编号传入的元组
Out[59]:
array([[[ 0,  1,  2,  3],
        [ 8,  9, 10, 11]],

       [[ 4,  5,  6,  7],
        [12, 13, 14, 15]]])
In [60]: arr.swapaxes(1,2) #也可以转置，传入一对轴编号， 也是返回元数据的视图，不是对源上操作
Out[60]:
array([[[ 0,  4],
        [ 1,  5],
        [ 2,  6],
        [ 3,  7]],

       [[ 8, 12],
        [ 9, 13],
        [10, 14],
        [11, 15]]])        
